if(!customElements.get('product-info')){customElements.define('product-info',class ProductInfo extends HTMLElement{constructor(){super();this.input=this.querySelector('.quantity__input'),this.currentVariant=this.querySelector('.product-variant-id'),this.variantSelects=this.querySelector('variant-radios'),this.submitButton=this.querySelector('[type="submit']")}cartUpdateUnsubscriber=undefined,variantChangeUnsubscriber=undefined,connectedCallback(){if(!this.input)return;this.quantityForm=this.querySelector('.product-form__quantity');if(!this.quantityForm)return;this.setQuantityBoundries();if(!this.dataset.originalSection){this.cartUpdateUnsubscriber=subscribe(PUB_SUB_EVENTS.cartUpdate,this.fetchQuantityRules.bind(this))}this.variantChangeUnsubscriber=subscribe(PUB_SUB_EVENTS.variantChange,(t)=>{const e=this.dataset.originalSection?this.dataset.originalSection:this.dataset.section;if(t.data.sectionId!==e)return;this.updateQuantityRules(t.data.sectionId,t.data.html),this.setQuantityBoundries()})}disconnectedCallback(){this.cartUpdateUnsubscriber&&this.cartUpdateUnsubscriber(),this.variantChangeUnsubscriber&&this.variantChangeUnsubscriber()}setQuantityBoundries(){const t={cartQuantity:this.input.dataset.cartQuantity?parseInt(this.input.dataset.cartQuantity):0,min:this.input.dataset.min?parseInt(this.input.dataset.min):1,max:this.input.dataset.max?parseInt(this.input.dataset.max):null,step:this.input.step?parseInt(this.input.step):1},e=t.min;const i=t.max===null?t.max:t.max-t.cartQuantity;if(i!==null)e=Math.min(e,i);if(t.cartQuantity>=t.min)e=Math.min(e,t.step);this.input.min=e,this.input.max=i,publish(PUB_SUB_EVENTS.quantityUpdate,undefined)}fetchQuantityRules(){if(!this.currentVariant||!this.currentVariant.value)return;this.querySelector('.quantity__rules-cart .loading-overlay').classList.remove('hidden'),fetch(`${this.dataset.url}?variant=${this.currentVariant.value}&section_id=${this.dataset.section}`).then((t)=>t.text()).then((t)=>{const e=new DOMParser().parseFromString(t,'text/html');this.updateQuantityRules(this.dataset.section,e),this.setQuantityBoundries()}).catch((t)=>{console.error(t)}).finally(()=>{this.querySelector('.quantity__rules-cart .loading-overlay').classList.add('hidden')})}updateQuantityRules(t,e){const i=e.getElementById(`Quantity-Form-${t}`),s=['.quantity__input','.quantity__rules','.quantity__label'];for(let t of s){const e=this.quantityForm.querySelector(t),s=i.querySelector(t);if(!e||!s)continue;if(t==='.quantity__input'){const i=['data-cart-quantity','data-min','data-max','step'];for(let t of i){const i=s.getAttribute(t);i!==null&&e.setAttribute(t,i)}}else e.innerHTML=s.innerHTML}}}});
